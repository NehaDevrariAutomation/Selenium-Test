<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="shashwat-Inspiron-3542" failures="0" tests="2" name="Default test" time="0.433" errors="0" timestamp="2020-05-11T13:23:52 IST">
  <testcase classname="com.pkg.NewTest" name="@BeforeMethod LOunch" time="0.2">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: /home/shashwat/Desktop/newfolder/chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: /home/shashwat/Desktop/newfolder/chromedriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:589)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:154)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:149)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:36)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:195)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:389)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:118)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:105)
at com.pkg.NewTest.LOunch(NewTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:64)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:364)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:318)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod LOunch -->
  <testcase classname="com.pkg.NewTest" name="@AfterMethod exit" time="-1.589183632642E9">
    <skipped/>
  </testcase> <!-- @AfterMethod exit -->
  <testcase classname="com.pkg.NewTest" name="@BeforeMethod LOunch" time="-1.589183632658E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod LOunch -->
  <testcase classname="com.pkg.NewTest" name="@AfterMethod exit" time="-1.589183632672E9">
    <skipped/>
  </testcase> <!-- @AfterMethod exit -->
  <testcase classname="com.pkg.NewTest" name="login" time="0.0">
    <skipped/>
  </testcase> <!-- login -->
  <testcase classname="com.pkg.NewTest" name="loout" time="0.0">
    <skipped/>
  </testcase> <!-- loout -->
</testsuite> <!-- Default test -->
